{"version":3,"file":"static/js/503.9041749c.chunk.js","mappings":"wMAeA,EAbwB,SAACA,GACvB,OACE,gBACEC,UAAS,mBAAcD,EAAMC,WAC7BC,MAAO,CACLC,OAAQH,EAAMG,OACdC,MAAOJ,EAAMI,OAAS,OACtBC,aAAcL,EAAMM,SAI5B,ECwBaC,EAAoB,WAC/B,OACE,iBAAKN,UAAU,qFAAoF,WACjG,SAAC,EAAe,CAACA,UAAU,mDAC3B,iBAAKA,UAAU,uBAAsB,WACnC,eAAIA,UAAU,0BAAyB,UACrC,SAAC,EAAe,CAACA,UAAU,uBAE7B,iBAAKA,UAAU,6DAA4D,WACzE,2BACE,SAAC,EAAe,CAACA,UAAU,uBAE7B,2BACE,SAAC,EAAe,CAACA,UAAU,wBAG/B,SAAC,EAAe,CAACA,UAAU,oCAInC,EACA,EAnDkB,SAAH,GAAkB,IAAZO,EAAI,EAAJA,KACXC,EAAuDD,EAAvDC,MAAOC,EAAgDF,EAAhDE,aAAcC,EAAkCH,EAAlCG,aAAcC,EAAoBJ,EAApBI,YAAaC,EAAOL,EAAPK,GAClDC,GAAWC,EAAAA,EAAAA,MACjB,OACE,iBAAKd,UAAU,sFAAqF,WAClG,gBACEe,IAAKC,EAAAA,GAAAA,SAAiBL,GACtBM,IAAI,GACJjB,UAAU,mDAEZ,iBAAKA,UAAU,uBAAsB,WACnC,eAAIA,UAAU,0BAAyB,SAAEQ,KACzC,iBAAKR,UAAU,6DAA4D,WACzE,0BAAO,IAAIkB,KAAKR,GAAcS,iBAC9B,0BAAOV,QAET,SAACW,EAAA,EAAM,CAACC,QAAS,kBAAMR,EAAS,UAAD,OAAWD,GAAK,EAAC,SAAC,mBAIzD,C,4HCwBA,EA5CkB,SAAH,GAAkC,IAAD,IAA3BU,KAAAA,OAAI,MAAG,cAAa,EACvC,GAAwBC,EAAAA,EAAAA,IAAOP,EAAAA,GAAAA,aAAqBM,GAAOE,EAAAA,IAAnDC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACRC,GAAaF,IAASC,EACtBE,GAAa,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAMI,UAAW,GAEhC,OACE,iBAAK7B,UAAU,aAAY,UACxB2B,IACC,+BACE,UAAC,KAAM,CAACG,WAAY,OAAQC,aAAc,GAAIC,cAAe,OAAO,WAClE,SAAC,KAAW,WACV,SAACC,EAAA,EAAiB,OAEpB,SAAC,KAAW,WACV,SAACA,EAAA,EAAiB,OAEpB,SAAC,KAAW,WACV,SAACA,EAAA,EAAiB,OAEpB,SAAC,KAAW,WACV,SAACA,EAAA,EAAiB,YAKxBN,IACA,SAAC,KAAM,CAACG,WAAY,OAAQC,aAAc,GAAIG,YAAa,CACzD,IAAM,CAAEF,cAAe,GACvB,IAAK,CAAEA,cAAe,GACtB,IAAK,CAAEA,cAAe,GACtB,IAAK,CAAEA,cAAe,IACtB,SACCJ,EAAOO,OAAS,GACfP,EAAOQ,KAAI,SAAC7B,GAAI,OACd,SAAC,KAAW,WACV,SAAC0B,EAAA,EAAS,CAAC1B,KAAMA,KADDA,EAAKK,GAET,QAM5B,ECjBA,EA7BiB,WACf,OACE,UAAC,EAAAyB,SAAQ,YACP,qBAASrC,UAAU,sCAAqC,WACtD,eAAIA,UAAU,kDAAiD,SAAC,iBAGhE,SAAC,EAAS,QAIZ,qBAASA,UAAU,qCAAoC,WACrD,eAAIA,UAAU,kDAAiD,SAAC,eAGhE,SAAC,EAAS,CAACsB,KAAK,kBAIlB,qBAAStB,UAAU,qCAAoC,WACrD,eAAIA,UAAU,kDAAiD,SAAC,cAGhE,SAAC,EAAS,CAACsB,KAAK,iBAIxB,C","sources":["components/loading/LoadingSkeleton.js","components/movie/MovieCard.js","components/movie/MovieList.js","pages/HomePage.js"],"sourcesContent":["import React from \"react\";\n\nconst LoadingSkeleton = (props) => {\n  return (\n    <div\n      className={`skeleton ${props.className}`}\n      style={{\n        height: props.height,\n        width: props.width || \"100%\",\n        borderRadius: props.radius,\n      }}\n    ></div>\n  );\n};\n\nexport default LoadingSkeleton;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { tmdbAPI } from \"../../config\";\nimport Button from \"../button/Button\";\nimport PropsTypes from \"prop-types\";\nimport LoadingSkeleton from \"../loading/LoadingSkeleton\";\n\nconst MovieCard = ({ item }) => {\n  const { title, vote_average, release_date, poster_path, id } = item;\n  const navigate = useNavigate();\n  return (\n    <div className=\"flex flex-col h-full p-3 text-white rounded-lg select-none movie-card bg-slate-800 \">\n      <img\n        src={tmdbAPI.image500(poster_path)}\n        alt=\"\"\n        className=\"w-full h-[250px] object-cover rounded-lg mb-5\"\n      />\n      <div className=\"flex flex-col flex-1\">\n        <h3 className=\"mb-3 text-xl font-bold \">{title}</h3>\n        <div className=\"flex items-center justify-between mb-10 text-sm opacity-50\">\n          <span>{new Date(release_date).getFullYear()}</span>\n          <span>{vote_average}</span>\n        </div>\n        <Button onClick={() => navigate(`/movie/${id}`)}>Watch Now</Button>\n      </div>\n    </div>\n  );\n};\nMovieCard.propTypes = {\n  item: PropsTypes.shape({\n    title: PropsTypes.string,\n    vote_average: PropsTypes.number,\n    release_date: PropsTypes.string,\n    poster_path: PropsTypes.string,\n    id: PropsTypes.number,\n  }),\n};\nexport const MovieCardSkeleton = () => {\n  return (\n    <div className=\"flex flex-col h-full p-3 text-white rounded-lg select-none movie-card bg-slate-800\">\n      <LoadingSkeleton className=\"w-full h-[250px] object-cover rounded-lg mb-5\"></LoadingSkeleton>\n      <div className=\"flex flex-col flex-1\">\n        <h3 className=\"mb-3 text-xl font-bold \">\n          <LoadingSkeleton className=\"w-full h-[20px]\"></LoadingSkeleton>\n        </h3>\n        <div className=\"flex items-center justify-between mb-10 text-sm opacity-50\">\n          <span>\n            <LoadingSkeleton className=\"w-50px h-[10px]\"></LoadingSkeleton>\n          </span>\n          <span>\n            <LoadingSkeleton className=\"w-30 h-[10px]\"></LoadingSkeleton>\n          </span>\n        </div>\n        <LoadingSkeleton className=\"w-full h-[45px] rounded-md\"></LoadingSkeleton>\n      </div>\n    </div>\n  );\n};\nexport default MovieCard;\n","import React from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n\nimport MovieCard, { MovieCardSkeleton } from \"./MovieCard\";\nimport useSWR from \"swr\";\nimport { fetcher, tmdbAPI } from \"../../config\";\n\nconst MovieList = ({ type = \"now_playing\" }) => {\n  const { data, error } = useSWR(tmdbAPI.getMovieList(type), fetcher);\n  const isLoading = !data && !error;\n  const movies = data?.results || [];\n\n  return (\n    <div className=\"movie-list\">\n      {isLoading && (\n        <>\n          <Swiper grabCursor={\"true\"} spaceBetween={40} slidesPerView={\"auto\"}>\n            <SwiperSlide>\n              <MovieCardSkeleton></MovieCardSkeleton>\n            </SwiperSlide>\n            <SwiperSlide>\n              <MovieCardSkeleton></MovieCardSkeleton>\n            </SwiperSlide>\n            <SwiperSlide>\n              <MovieCardSkeleton></MovieCardSkeleton>\n            </SwiperSlide>\n            <SwiperSlide>\n              <MovieCardSkeleton></MovieCardSkeleton>\n            </SwiperSlide>\n          </Swiper>\n        </>\n      )}\n      {!isLoading && (\n        <Swiper grabCursor={\"true\"} spaceBetween={40} breakpoints={{\n          1000: { slidesPerView: 4 },\n          640: { slidesPerView: 3},\n          400: { slidesPerView: 2},\n          200: { slidesPerView: 1},\n        }}>\n          {movies.length > 0 &&\n            movies.map((item) => (\n              <SwiperSlide key={item.id}>\n                <MovieCard item={item}></MovieCard>\n              </SwiperSlide>\n            ))}\n        </Swiper>\n      )}\n    </div>\n  );\n};\n\nexport default MovieList;\n","import React, { Fragment } from \"react\";\nimport MovieList from \"../components/movie/MovieList\";\n\nconst HomePage = () => {\n  return (\n    <Fragment>\n      <section className=\"pb-20 movies-layout page-container \">\n        <h2 className=\"mb-10 text-3xl font-bold text-white capitalize \">\n          Now Playing\n        </h2>\n        <MovieList></MovieList>\n      </section>\n\n      {/* ------------------Top Rated--------------- */}\n      <section className=\"pb-20 movies-layout page-container\">\n        <h2 className=\"mb-10 text-3xl font-bold text-white capitalize \">\n          Top Rated\n        </h2>\n        <MovieList type=\"top_rated\"></MovieList>\n      </section>\n\n      {/* ---------------------Trending--------------- */}\n      <section className=\"pb-10 movies-layout page-container\">\n        <h2 className=\"mb-10 text-3xl font-bold text-white capitalize \">\n          Trending\n        </h2>\n        <MovieList type=\"popular\"></MovieList>\n      </section>\n    </Fragment>\n  );\n};\n\nexport default HomePage;\n"],"names":["props","className","style","height","width","borderRadius","radius","MovieCardSkeleton","item","title","vote_average","release_date","poster_path","id","navigate","useNavigate","src","tmdbAPI","alt","Date","getFullYear","Button","onClick","type","useSWR","fetcher","data","error","isLoading","movies","results","grabCursor","spaceBetween","slidesPerView","MovieCard","breakpoints","length","map","Fragment"],"sourceRoot":""}