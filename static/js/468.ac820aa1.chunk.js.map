{"version":3,"file":"static/js/468.ac820aa1.chunk.js","mappings":"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","sources":["components/loading/LoadingSkeleton.js","components/movie/MovieCard.js","pages/MovieDetailPage.js"],"sourcesContent":["import React from \"react\";\n\nconst LoadingSkeleton = (props) => {\n  return (\n    <div\n      className={`skeleton ${props.className}`}\n      style={{\n        height: props.height,\n        width: props.width || \"100%\",\n        borderRadius: props.radius,\n      }}\n    ></div>\n  );\n};\n\nexport default LoadingSkeleton;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { tmdbAPI } from \"../../config\";\nimport Button from \"../button/Button\";\nimport PropsTypes from \"prop-types\";\nimport LoadingSkeleton from \"../loading/LoadingSkeleton\";\n\nconst MovieCard = ({ item }) => {\n  const { title, vote_average, release_date, poster_path, id } = item;\n  const navigate = useNavigate();\n  return (\n    <div className=\"flex flex-col h-full p-3 text-white rounded-lg select-none movie-card bg-slate-800 \">\n      <img\n        src={tmdbAPI.image500(poster_path)}\n        alt=\"\"\n        className=\"w-full h-[250px] object-cover rounded-lg mb-5\"\n      />\n      <div className=\"flex flex-col flex-1\">\n        <h3 className=\"mb-3 text-xl font-bold \">{title}</h3>\n        <div className=\"flex items-center justify-between mb-10 text-sm opacity-50\">\n          <span>{new Date(release_date).getFullYear()}</span>\n          <span>{vote_average}</span>\n        </div>\n        <Button onClick={() => navigate(`/movie/${id}`)}>Watch Now</Button>\n      </div>\n    </div>\n  );\n};\nMovieCard.propTypes = {\n  item: PropsTypes.shape({\n    title: PropsTypes.string,\n    vote_average: PropsTypes.number,\n    release_date: PropsTypes.string,\n    poster_path: PropsTypes.string,\n    id: PropsTypes.number,\n  }),\n};\nexport const MovieCardSkeleton = () => {\n  return (\n    <div className=\"flex flex-col h-full p-3 text-white rounded-lg select-none movie-card bg-slate-800\">\n      <LoadingSkeleton className=\"w-full h-[250px] object-cover rounded-lg mb-5\"></LoadingSkeleton>\n      <div className=\"flex flex-col flex-1\">\n        <h3 className=\"mb-3 text-xl font-bold \">\n          <LoadingSkeleton className=\"w-full h-[20px]\"></LoadingSkeleton>\n        </h3>\n        <div className=\"flex items-center justify-between mb-10 text-sm opacity-50\">\n          <span>\n            <LoadingSkeleton className=\"w-50px h-[10px]\"></LoadingSkeleton>\n          </span>\n          <span>\n            <LoadingSkeleton className=\"w-30 h-[10px]\"></LoadingSkeleton>\n          </span>\n        </div>\n        <LoadingSkeleton className=\"w-full h-[45px] rounded-md\"></LoadingSkeleton>\n      </div>\n    </div>\n  );\n};\nexport default MovieCard;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport useSWR from \"swr\";\nimport MovieCard from \"../components/movie/MovieCard\";\nimport { fetcher, tmdbAPI } from \"../config\";\n\nconst MovieDetailPage = () => {\n  const { Id } = useParams();\n\n  const { data } = useSWR(tmdbAPI.getMovieDetails(Id), fetcher);\n\n  if (!data) return null;\n  const { backdrop_path, poster_path, title, genres, overview } = data;\n  return (\n    <div className=\"py-10\">\n      <div className=\"w-full h-[600px] relative\">\n        <div className=\"absolute inset-0 bg-black bg-opacity-70\"></div>\n        <div\n          className=\"w-full h-full bg-no-repeat bg-cover \"\n          style={{\n            backgroundImage: `url(${tmdbAPI.imageOriginal(backdrop_path)})`,\n          }}\n        ></div>\n      </div>\n      <div className=\"w-full h-[400px] max-w-[800px] mx-auto -mt-[200px] relative z-10 pb-10\">\n        <img\n          src={tmdbAPI.imageOriginal(poster_path)}\n          alt=\"\"\n          className=\"object-cover w-full h-full rounded-lg \"\n        />\n      </div>\n      <h1 className=\"mb-10 text-4xl font-bold text-center text-white\">\n        {title}\n      </h1>\n      {genres.length > 0 && (\n        <div className=\"flex items-center justify-center mb-10 gap-x-5\">\n          {genres.map((item) => (\n            <span\n              className=\"px-4 py-2 border rounded border-primary text-primary\"\n              key={item.id}\n            >\n              {item.name}\n            </span>\n          ))}\n        </div>\n      )}\n      <p className=\"text-center leading-relaxed max-w-[600px] mx-auto mb-10 \">\n        {overview}\n      </p>\n      <div>\n        <MovieMeta type=\"credits\"></MovieMeta>\n        <MovieMeta type=\"videos\"></MovieMeta>\n        <MovieMeta type=\"similar\"></MovieMeta>\n      </div>\n    </div>\n  );\n};\nfunction MovieMeta({ type = \"videos\" }) {\n  const { Id } = useParams();\n\n  const { data } = useSWR(tmdbAPI.getMovieTotalType(Id, type), fetcher);\n  if (!data) return null;\n\n  if (type === \"credits\") {\n    const { cast } = data;\n    console.log(\"ðŸš€ ~ file: MovieDetailPage.js:68 ~ MovieMeta ~ cast\", cast);\n\n    if (!cast || cast.length <= 0) return null;\n    return (\n      <div className=\"py-10\">\n        <h2 className=\"mb-10 text-3xl text-center\">Casts</h2>\n        <div className=\"grid grid-cols-4 gap-5\">\n          {cast.slice(0, 4).map((item) => (\n            <div className=\"cast-item \" key={item.id}>\n              <img\n                src={tmdbAPI.imageOriginal(item.profile_path)}\n                alt=\"\"\n                className=\"w-full h-[350px] object-cover rounded-lg mb-3\"\n              />\n              <h3 className=\"text-xl font-medium text-center\">{item.name}</h3>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  } else {\n    const { results } = data;\n    if (!results || results.length <= 0) return null;\n    if (type === \"videos\")\n      return (\n        <div className=\"py-10\">\n          <div className=\"flex flex-col gap-10\">\n            {results.slice(0, 2).map((item) => (\n              <div className=\"\" key={item.id}>\n                <h3 className=\"inline-block p-3 mb-5 font-medium tet-xl bg-secondary\">\n                  {item.name}\n                </h3>\n                <div className=\"w-full aspect-video\">\n                  <iframe\n                    width=\"891\"\n                    height=\"501\"\n                    src={`https://www.youtube.com/embed/${item.key}`}\n                    title=\"Nháº¡c Chill TikTok Nháº¹ NhÃ ng 2023 - Nhá»¯ng Ca KhÃºc Lofi Chill Buá»“n Thá»‹nh HÃ nh Hay Nháº¥t P87\"\n                    frameBorder=\"0\"\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n                    allowFullScreen\n                    className=\"object-fill w-full h-full\"\n                  ></iframe>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      );\n    if (type === \"similar\")\n      return (\n        <div className=\"py-10\">\n          <h3 className=\"text-3xl font-medium\">Similar Movie</h3>\n          <div className=\"movie-list\">\n            <Swiper\n              grabCursor={\"true\"}\n              spaceBetween={40}\n              slidesPerView={\"auto\"}\n            >\n              {results.length > 0 &&\n                results.map((item) => (\n                  <SwiperSlide key={item.id}>\n                    <MovieCard item={item}></MovieCard>\n                  </SwiperSlide>\n                ))}\n            </Swiper>\n          </div>\n        </div>\n      );\n  }\n  return null;\n}\n// function MovieCredits() {\n//   const { Id } = useParams();\n\n//   const { data } = useSWR(tmdbAPI.getMovieTotalType(Id, \"credits\"), fetcher);\n//   if (!data) return null;\n//   const { cast } = data;\n//   if (!cast || cast.length <= 0) return null;\n//   return (\n//     <div className=\"py-10\">\n//       <h2 className=\"mb-10 text-3xl text-center\">Casts</h2>\n//       <div className=\"grid grid-cols-4 gap-5\">\n//         {cast.slice(0, 4).map((item) => (\n//           <div className=\"cast-item \" key={item.id}>\n//             <img\n//               src={tmdbAPI.imageOriginal(item.profile_path)}\n//               alt=\"\"\n//               className=\"w-full h-[350px] object-cover rounded-lg mb-3\"\n//             />\n//             <h3 className=\"text-xl font-medium text-center\">{item.name}</h3>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n// function MovieVideos() {\n//   const { Id } = useParams();\n\n//   const { data } = useSWR(tmdbAPI.getMovieTotalType(Id, \"videos\"), fetcher);\n//   if (!data) return null;\n//   const { results } = data;\n//   if (!results || results.length <= 0) return null;\n//   return (\n//     <div className=\"py-10\">\n//       <div className=\"flex flex-col gap-10\">\n//         {results.slice(0, 2).map((item) => (\n//           <div className=\"\" key={item.id}>\n//             <h3 className=\"inline-block p-3 mb-5 font-medium tet-xl bg-secondary\">\n//               {item.name}\n//             </h3>\n//             <div className=\"w-full aspect-video\">\n//               <iframe\n//                 width=\"891\"\n//                 height=\"501\"\n//                 src={`https://www.youtube.com/embed/${item.key}`}\n//                 title=\"Nháº¡c Chill TikTok Nháº¹ NhÃ ng 2023 - Nhá»¯ng Ca KhÃºc Lofi Chill Buá»“n Thá»‹nh HÃ nh Hay Nháº¥t P87\"\n//                 frameBorder=\"0\"\n//                 allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n//                 allowFullScreen\n//                 className=\"object-fill w-full h-full\"\n//               ></iframe>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n// function MovieSimilar() {\n//   const { Id } = useParams();\n\n//   const { data } = useSWR(\n//     tmdbAPI.getMovieTotalType(Id, \"similar\"),\n\n//     fetcher\n//   );\n\n//   if (!data) return null;\n//   const { results } = data;\n//   if (!results || results.length <= 0) return null;\n//   return (\n//     <div className=\"py-10\">\n//       <h3 className=\"text-3xl font-medium\">Similar Movie</h3>\n//       <div className=\"movie-list\">\n//         <Swiper grabCursor={\"true\"} spaceBetween={40} slidesPerView={\"auto\"}>\n//           {results.length > 0 &&\n//             results.map((item) => (\n//               <SwiperSlide key={item.id}>\n//                 <MovieCard item={item}></MovieCard>\n//               </SwiperSlide>\n//             ))}\n//         </Swiper>\n//       </div>\n//     </div>\n//   );\n// }\nexport default MovieDetailPage;\n"],"names":["props","className","style","height","width","borderRadius","radius","MovieCardSkeleton","item","title","vote_average","release_date","poster_path","id","navigate","useNavigate","src","tmdbAPI","alt","Date","getFullYear","Button","onClick","MovieMeta","type","Id","useParams","data","useSWR","fetcher","cast","console","log","length","slice","map","profile_path","name","results","key","frameBorder","allow","allowFullScreen","grabCursor","spaceBetween","slidesPerView","backdrop_path","genres","overview","backgroundImage"],"sourceRoot":""}